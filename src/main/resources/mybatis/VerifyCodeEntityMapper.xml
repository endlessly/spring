<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.VerifyCodeEntityMapper">
  <resultMap id="BaseResultMap" type="com.test.entity.VerifyCodeEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="verify_code" jdbcType="INTEGER" property="verifyCode" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="check_num" jdbcType="INTEGER" property="checkNum" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="send_time" jdbcType="INTEGER" property="sendTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, verify_code, mobile, valid, check_num, type, send_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from verify_code
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from verify_code
    where mobile=#{mobile,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from verify_code
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.test.entity.VerifyCodeEntity">
    insert into verify_code (id, verify_code, mobile, 
      valid, check_num, type, 
      send_time)
    values (#{id,jdbcType=INTEGER}, #{verifyCode,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{valid,jdbcType=BIT}, #{checkNum,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{sendTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.test.entity.VerifyCodeEntity">
    insert into verify_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="verifyCode != null">
        verify_code,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="checkNum != null">
        check_num,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="verifyCode != null">
        #{verifyCode,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="checkNum != null">
        #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.entity.VerifyCodeEntity">
    update verify_code
    <set>
      <if test="verifyCode != null">
        verify_code = #{verifyCode,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
      <if test="checkNum != null">
        check_num = #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.entity.VerifyCodeEntity">
    update verify_code
    set verify_code = #{verifyCode,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=BIT},
      check_num = #{checkNum,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>